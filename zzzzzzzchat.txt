----------------------------------------------------------------
schema of product_code
----------------------------------------------------------------
Schema::create('product_codes', function (Blueprint $table) {
    $table->id();
    $table->string('name');
    $table->string('product_code')->unique();
    $table->timestamps();
});
----------------------------------------------------------------
schema of product
----------------------------------------------------------------
Schema::create('products', function (Blueprint $table) {
    $table->id ();
    $table->foreignId('store_id')->constrained('stores')->cascadeOnDelete();
    $table->foreignId('category_id')->nullable()->constrained('categories')->nullOnDelete();
    $table->foreignId('productCode_id')->nullable()->constrained('product_codes')->nullOnDelete();
    $table->string('name');
    $table->string('slug')->unique();
    $table->text('description')->nullable();
    $table->string('image')->nullable();
    $table->string('product_code')->nullable();
    $table->float('price')->default(0);
    $table->float('compare_price')->nullable();
    $table->json ('options')->nullable();
    $table->float('rating')->default(0);
    $table->boolean('features')->default(0);
    $table->enum('status',['active' , 'draft', 'archvied'])->default('active');
    $table->timestamps ();
    $table->softDeletes();
});
----------------------------------------------------------------
model of product_code
----------------------------------------------------------------
class ProductCode extends Model
{
    use HasFactory;

    protected $fillable = [
        'name',
        'product_code',
    ];

    public function product()
    {
        return $this->belongsTo(Product::class);
    }
}
----------------------------------------------------------------
model of product
----------------------------------------------------------------
class Product extends Model
{
    use HasFactory;

    protected $fillable = [
        'store_id',
        'category_id',
        'name',
        'slug',
        'description',
        'image',
        'product_code',
        'price',
        'compare_price',
        'options',
        'rating',
        'features',
        'status',
    ];


    protected static function booted()
    {
        // that is error    "message": "Global scope must be an instance of Closure or Scope.",
        // he said i want a object from class not class 
        // static::addGlobalScope('store', StoreScope::class);
        static::addGlobalScope('store' , new StoreScope());
    }

    public function category(){
        return $this->belongsTo(Category::class, 'category_id' , 'id');
    }
    public function store(){
        return $this->belongsTo(Store::class, 'store_id' , 'id');
    }

    public function tags(){
        return $this->belongsToMany(
            Tag::class,     // Related Model
            'product_tag',  // Pivot table name
            'product_id',   // FK in pivot table for the current model
            'tag_id',       // FK in pivot table for the related model
            'id',           // PK current model
            'id'            // PK related model
        );
    }

    public function productCode()
    {
        return $this->hasOne(ProductCode::class);
    }
    public function scopeFilter(EloquentBuilder $builder, $filters)
    {
        $name = $filters['name'] ?? null;

        $status = $filters['status'] ?? null;

        if ($name) {
            $builder->where('name', 'LIKE', "%$name%");
        }
        if ($status) {
            $builder->where('status', '=', $status);
        }

    }
}
----------------------------------------------------------------
function of getAllProducts
----------------------------------------------------------------
public function getAllProducts(Request $request)
{
    $filters = $request->query();
    $products = Product::with(['category', 'store' , 'tags' , 'productCode'])->filter($filters)->paginate();

    return response()->json(['data' => $products]);
}
----------------------------------------------------------------
error
----------------------------------------------------------------
"message": "SQLSTATE[42S22]: Column not found: 1054 Unknown column 'product_codes.product_id' in 'where clause' (Connection: mysql, SQL: select * from `product_codes` where `product_codes`.`product_id` in (1))",
"exception": "Illuminate\\Database\\QueryException",





-----------------------------------------------------------------------------------
but still parcode null 
this my data send:
-----------------------------------------------------------------------------------
name:parcode 
description:szdxfcgnFvbhmjnbnvbcvxczxzzaxZSCXVNB
store_id:5
category_id:2
price:21
compare_price:12
rating:1
features:0
status:active
product_code_name:Sample Product Code
-----------------------------------------------------------------------------------
and get this data 
-----------------------------------------------------------------------------------
    "data": {
        "id": 101,
        "store_id": 5,
        "category_id": 2,
        "productCode_id": null,
        "name": "parcode",
        "slug": "parcode",
        "description": "szdxfcgnFvbhmjnbnvbcvxczxzzaxZSCXVNB",
        "image": "jbBTAMx01695911347.png",
        "price": 21,
        "compare_price": 12,
        "options": null,
        "rating": 1,
        "features": 0,
        "status": "active",
        "product_code": null,
        "created_at": "2023-09-28T14:29:07.000000Z",
        "updated_at": "2023-09-28T14:29:07.000000Z",
        "deleted_at": null,
        "category": {
            "id": 2,
            "parent_id": null,
            "name": "voluptas ea id",
            "slug": "voluptas-ea-id",
            "description": "Est quisquam id optio qui nihil et quidem placeat et veniam enim fugit harum enim voluptates in asperiores optio.",
            "image": "https://via.placeholder.com/640x480.png/002233?text=modi",
            "status": "active",
            "created_at": "2023-09-28T14:28:59.000000Z",
            "updated_at": "2023-09-28T14:28:59.000000Z",
            "deleted_at": null
        },
        "store": {
            "id": 5,
            "name": "excepturi reiciendis",
            "slug": "excepturi-reiciendis",
            "description": "Explicabo et deleniti dolorum fuga itaque eos.",
            "logo_image": "https://via.placeholder.com/300x300.png/003399?text=amet",
            "cover_image": "https://via.placeholder.com/800x600.png/00dd99?text=sunt",
            "status": "active",
            "created_at": "2023-09-28T14:28:59.000000Z",
            "updated_at": "2023-09-28T14:28:59.000000Z"
        },
        "tags": []
    }
-----------------------------------------------------------------------------------
but the parcode stored in th table of "productcodes" but dont make a foreignid
-----------------------------------------------------------------------------------